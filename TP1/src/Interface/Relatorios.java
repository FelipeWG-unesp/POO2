/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

/**
 *
 * @author Usuario
 */
public class Relatorios extends javax.swing.JFrame {

    /**
     * Creates new form Relatorios
     */
    public Relatorios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Relatórios");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar todos os Veículos cadastrados, seja nacional ou importado.", "Listar todos os Veículos de fabricação nacional.", "Listar todos os Veículos importados.", "Listar todos os Veículos disponíveis para locação.", "Listar todos os Veículos disponíveis para locação que necessitam de uma categoria de CNH especifica (informada ou selecionada pelo usuário).", "Listar todos os Veículos não disponíveis para locação, ou seja, locados.", "Listar todos os Veículos com atraso na devolução.", "Listar todos os Clientes que já fizeram a locação de um Veículo em específico", "Listar todos os Funcionários cadastrados.", "Listar todos os Clientes cadastrados.", "Listar o histórico de locação de um Cliente em específico.", "Listar Clientes com locações em atraso.", "Listar todas as Locações realizadas, seja elas finalizadas ou não.", "Listar todas as locações finalizadas.", "Listar todas as locações não finalizadas, ou seja, ainda dentro do prazo de locação.", "Listar todas as locações não finalizadas Veículos nacionais.", "Listar todas as locações não finalizadas de Veículos importados.", "Listar todas as locações em atraso, ou seja, data de devolução vencida, mas Veículo não devolvido, locação não finalizada.", "Listar todos os tipos de Seguros cadastrados." }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo de relatório:");

        jLabel3.setText("Possível informação adicional:");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Confirma");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jComboBox1, 0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        //INFORMAÇÃO ADICIONAL
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //RELATÓRIOS POSSÍVEIS
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //BOTÃO "CONFIRMA"
        String texto = (String) jComboBox1.getSelectedItem();
        switch (texto) {
            case "Listar todos os Veículos cadastrados, seja nacional ou importado." -> {
                jTextField2.setText(texto); //locadora.todosVeiculos();
            }
            case "Listar todos os Veículos de fabricação nacional." -> {
                jTextField2.setText(texto); //locadora.veiculosNacionais()
            }
            case "Listar todos os Veículos importados." -> {
                jTextField2.setText(texto); //locadora.veiculosImportados()
            }
            case "Listar todos os Veículos disponíveis para locação." -> {
                jTextField2.setText(texto); //locadora.veiculosDisponiveis()
            }
            case "Listar todos os Veículos disponíveis para locação que necessitam de uma categoria de CNH especifica (informada ou selecionada pelo usuário)." -> {
                jTextField2.setText(texto); //locadora.veiculosDisponiveisTipoCNH(String tipo)
            }
            case "Listar todos os Veículos não disponíveis para locação, ou seja, locados." -> {
                jTextField2.setText(texto); //locadora.veiculosLocados()
            }
            case "Listar todos os Veículos com atraso na devolução." -> {
                jTextField2.setText(texto); //locadora.veiculosAtrasados()
            }
            case "Listar todos os Clientes que já fizeram a locação de um Veículo em específico" -> {
                jTextField2.setText(texto); //locadora.clientesLocaramVeiculo(int codigoVeiculo)
            }
            case "Listar todos os Funcionários cadastrados." -> {
                jTextField2.setText(texto); //locadora.todosFuncionarios()
            }
            case "Listar todos os Clientes cadastrados." -> {
                jTextField2.setText(texto); //locadora.todosClientes()
            }
            case "Listar o histórico de locação de um Cliente em específico." -> {
                jTextField2.setText(texto); //locadora.historicoCliente(int codigoCliente)
            }
            case "Listar Clientes com locações em atraso." -> {
                jTextField2.setText(texto); //locadora.clientesAtrasados()
            }
            case "Listar todas as Locações realizadas, seja elas finalizadas ou não." -> {
                jTextField2.setText(texto); //locadora.todasLocacoes()
            }
            case "Listar todas as locações finalizadas." -> {
                jTextField2.setText(texto); //locadora.locacoesFinalizadas ()
            }
            case "Listar todas as locações não finalizadas, ou seja, ainda dentro do prazo de locação." -> {
                jTextField2.setText(texto); //locadora.locacoesNaoFinalizadas()
            }
            case "Listar todas as locações não finalizadas Veículos nacionais." -> {
                jTextField2.setText(texto); //locadora.locacoesNaoFinalizadasNacional()
            }
            case "Listar todas as locações não finalizadas de Veículos importados." -> {
                jTextField2.setText(texto); //locadora.locacoesNaoFinalizadasImportado()
            }
            case "Listar todas as locações em atraso, ou seja, data de devolução vencida, mas Veículo não devolvido, locação não finalizada." -> {
                jTextField2.setText(texto); //locadora.locacoesVencidasNaoFinalizadas()
            }
            case "Listar todos os tipos de Seguros cadastrados." -> {
                jTextField2.setText(texto); //locadora.todosSeguros()
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Relatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Relatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Relatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Relatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Relatorios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
